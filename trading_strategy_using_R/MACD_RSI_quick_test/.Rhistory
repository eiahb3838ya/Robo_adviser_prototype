##### Source =====
source("D:/Trading_Azar_TO_Evan_20190707/XQC_Trading_Fun1.R", local = TRUE)
library(PerformanceAnalytics)
library(quantmod)
library(timeSeries)
library(fUnitRoots)
library(fPortfolio)
library(CVXR)
library(tidyverse)
library(tidyquant)
library(plotly)
library(data.table)
library(RO
install.packages("PerformanceAnalytics")
install.packages("PerformanceAnalytics")
##### Source =====
source("XQC_Trading_Fun1.R", local = TRUE)
##### SQL Server =====
DataTable <- readRDS("D:/Trading_Azar_TO_Evan_20190707/SQLDB_TW_20190705.RDS")
##### SQL Server =====
DataTable <- readRDS("SQLDB_TW_20190705.RDS")
install.packages("installr")
library(installr)
updateR()
##### Source =====
source("XQC_Trading_Fun1.R", local = TRUE)
##### SQL Server =====
DataTable <- readRDS("SQLDB_TW_20190705.RDS")
##### getXtsData =====
StockCode = "2330"
SelectCol = "Close"
Data_Xts <- getXtsData(DataTable, StockCode)
##### Source =====
source("XQC_Trading_Fun1.R", local = TRUE)
Data_Xts <- getXtsData(DataTable, StockCode)
##### SQL Server =====
DataTable <- readRDS("SQLDB_TW_20190705.RDS")
##### getXtsData =====
StockCode = "2330"
SelectCol = "Close"
Data_Xts <- getXtsData(DataTable, StockCode)
View(getXtsData)
View(getXtsData)
Data_Xts <- getXtsData(DataTable, StockCode)
class(DataTable)
View(DataTable)
DataTable
DataTb <- DataTable
## Price_xts
Price_tb <- DataTb[,c("Date",SelectCol,"Stock_Code"), with = F]
install.packages("data.table")
Data_Xts <- getXtsData(DataTable, StockCode)
require(PerformanceAnalytics)
require(quantmod)
require(timeSeries)
require(fUnitRoots)
require(fPortfolio)
require(CVXR)
require(tidyverse)
require(tidyquant)
require(plotly)
require(data.table)
require(RODBC)
require(RODBC)
install.packages("RODBC")
##### Source =====
source("XQC_Trading_Fun1.R", local = TRUE)
##### SQL Server =====
DataTable <- readRDS("SQLDB_TW_20190705.RDS")
##### getXtsData =====
StockCode = "2330"
SelectCol = "Close"
Data_Xts <- getXtsData(DataTable, StockCode)
##### Info =====
SelectXTS <- Data_Xts$Select_xts
Data_Xts <- getXtsData(DataTable, StockCode)
##### getXtsData =====
StockCode = "2330"
SelectCol = "Close"
Data_Xts <- getXtsData(DataTable, StockCode)
install.packages("xts")
Data_Xts <- getXtsData(DataTable, StockCode)
##### Info =====
SelectXTS <- Data_Xts$Select_xts
Ret_xts <- Delt(SelectXTS)
colnames(Ret_xts) <- "Ret"
library(PerformanceAnalytics)
require(PerformanceAnalytics)
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
library(quantmod)
library(timeSeries)
library(fUnitRoots)
library(fPortfolio)
library(tidyverse)
library(tidyquant)
library(CVXR)
library(plotly)
library(data.table)
library(RODBC)
## XiQi Trading Code
## D:\Azar\2019Main\XQC_Trading\XQC_Trading_1.0.3_20190703
## Azar Lin
## 20190625,20190701,20190706
list.of.packages <- c("PerformanceAnalytics", "quantmod","timeSeries","fUnitRoots","fPortfolio","CVXR","tidyverse","tidyquant","plotly",
"data.table","RODBC")
## XiQi Trading Code
## D:\Azar\2019Main\XQC_Trading\XQC_Trading_1.0.3_20190703
## Azar Lin
## 20190625,20190701,20190706
list.of.packages <- c("PerformanceAnalytics", "quantmod","timeSeries","fUnitRoots","fPortfolio",
"CVXR","tidyverse","tidyquant","plotly","data.table","RODBC")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
manceAnalytics)
library(quantmod)
library(timeSeries)
library(fUnitRoots)
library(fPortfolio)
library(CVXR)
library(tidyverse)
library(tidyquant)
library(plotly)
library(data.table)
library(ROD
BC)
library(PerformanceAnalytics)
library(RODBC)
##### Source =====
source("XQC_Trading_Fun1.R", local = TRUE)
##### SQL Server =====
DataTable <- readRDS("SQLDB_TW_20190705.RDS")
##### getXtsData =====
StockCode = "2330"
SelectCol = "Close"
Data_Xts <- getXtsData(DataTable, StockCode)
Select_xts
Data_Xts
view(Data_Xts)
##### Info =====
SelectXTS <- Data_Xts$Select_xts
Ret_xts <- Delt(SelectXTS)
colnames(Ret_xts) <- "Ret"
Ret_xts
Ret_xts <- na.omit(Ret_xts)
CumRet_xts <- cumprod(Ret_xts$Ret + 1)
CumRet_tb <- as_tibble(as.data.table(CumRet_xts))
colnames(CumRet_tb) <- c("Date", "CumRet")
##### PortfolioAlls =====
SelectXTS <- Data_Xts$Select_xts
StockCode <- colnames(SelectXTS)
PriceXTS <- Data_Xts$Price_xts
##### MACD Strategy =====
MACD_list <- lapply(SelectXTS, function(idx){
MACD_ret <- XQ_MACD_Ret(idx)
})
Ret_MACD_list <- lapply(MACD_list, function(idx){
data <- idx[["Trading_Ret_MACD"]]
})
Trading_Ret_MACD <- do.call(cbind,Ret_MACD_list)
colnames(Trading_Ret_MACD) <- paste0(StockCode,"_MACD_Ret")
##### RSI Strategy =====
# RSI_ma = 20, maType = "SMA", > RSI_Up = 70 Short, < RSI_Down = 30 Long
RSI_list <- lapply(SelectXTS, function(idx){
RSI_ret <- XQ_RSI_Ret(idx)
})
Ret_RSI_list <- lapply(RSI_list, function(idx){
data <- idx[["Trading_Ret_RSI"]]
})
Trading_Ret_RSI <- do.call(cbind,Ret_RSI_list)
colnames(Trading_Ret_RSI) <- paste0(StockCode,"_RSI_Ret")
##### ALL =====
Trading_Ret_cb <- merge(Trading_Ret_MACD, Trading_Ret_RSI)
colnames(Trading_Ret_cb) <- c("MACD", "RSI")
Trading_Ret_All <- Trading_Ret_cb[complete.cases(Trading_Ret_cb)]
Portfolio_Alls <- list(PortfolioAll = Trading_Ret_All,
MACD = Trading_Ret_All[,"MACD"],
RSI = Trading_Ret_All[,"RSI"])
##### Portfolio_CumRet_tb =====
Portfolio_CumRet_xts <- cumprod(Portfolio_Alls$PortfolioAll + 1)
Portfolio_CumRet_tb <- as_tibble(as.data.table(Portfolio_CumRet_xts))
colnames(Portfolio_CumRet_tb) <- c("Date", colnames(Portfolio_Alls$PortfolioAll))
# plot_ly(Portfolio_CumRet_tb, x = ~Date,
# plot_ly(Portfolio_CumRet_tb, x = ~Date,
#         y = ~MACD, name = 'MACD', type = 'scatter', mode = 'lines') %>%
# plot_ly(Portfolio_CumRet_tb, x = ~Date,
#         y = ~MACD, name = 'MACD', type = 'scatter', mode = 'lines') %>%
#   add_trace(y = ~RSI, name = 'RSI', mode = 'lines') %>%
# plot_ly(Portfolio_CumRet_tb, x = ~Date,
#         y = ~MACD, name = 'MACD', type = 'scatter', mode = 'lines') %>%
#   add_trace(y = ~RSI, name = 'RSI', mode = 'lines') %>%
#   layout(title = paste0("Strategy Cumulative Return"))
# plot_ly(Portfolio_CumRet_tb, x = ~Date,
#         y = ~MACD, name = 'MACD', type = 'scatter', mode = 'lines') %>%
#   add_trace(y = ~RSI, name = 'RSI', mode = 'lines') %>%
#   layout(title = paste0("Strategy Cumulative Return"))
# plot_ly(Portfolio_CumRet_tb, x = ~Date,
#         y = ~MACD, name = 'MACD', type = 'scatter', mode = 'lines') %>%
#   add_trace(y = ~RSI, name = 'RSI', mode = 'lines') %>%
#   layout(title = paste0("Strategy Cumulative Return"))
# plot_ly(Portfolio_CumRet_tb, x = ~Date,
#         y = ~MACD, name = 'MACD', type = 'scatter', mode = 'lines') %>%
#   add_trace(y = ~RSI, name = 'RSI', mode = 'lines') %>%
#   layout(title = paste0("Strategy Cumulative Return"))
plot_ly(Portfolio_CumRet_tb, x = ~Date,
#         y = ~MACD, name = 'MACD', type = 'scatter', mode = 'lines') %>%
#   add_trace(y = ~RSI, name = 'RSI', mode = 'lines') %>%
#   layout(title = paste0("Strategy Cumulative Return"))
plot_ly(Portfolio_CumRet_tb, x = ~Date,
y = ~MACD, name = 'MACD', type = 'scatter', mode = 'lines') %>%
add_trace(y = ~RSI, name = 'RSI', mode = 'lines') %>%
layout(title = paste0("
plot_ly(Portfolio_CumRet_tb, x = ~Date,
y = ~MACD, name = 'MACD', type = 'scatter', mode = 'lines') %>%
add_trace(y = ~RSI, name = 'RSI', mode = 'lines') %>%
layout(title = paste0("Strategy Cumulative Return"))
plot_ly(Portfolio_CumRet_tb, x = ~Date,
y = ~MACD, name = 'MACD', type = 'scatter', mode = 'lines') %>%
add_trace(y = ~RSI, name = 'RSI', mode = 'lines') %>%
layout(title = paste0("Strategy Cumulative Return"))
Data_Xts <- getXtsData(DataTable, StockCode)
DataTable
Data_Xts
Data_Xts
view(Data_Xts)
